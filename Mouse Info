Bus 001 Device 005: ID 361d:0100 Finalmouse UltralightX dongle

 bMaxPacketSize0        64
  idVendor           0x361d Finalmouse
  idProduct          0x0100 UltralightX dongle

Endpoint Descriptor:
    bLength                 7
    bDescriptorType         5
    bEndpointAddress     0x81  EP 1 IN
    bmAttributes            3
        Transfer Type            Interrupt
        Synch Type               None
        Usage Type               Data
    wMaxPacketSize     0x0040  1x 64 bytes
    bInterval               1
Endpoint Descriptor:
    bLength                 7
    bDescriptorType         5
    bEndpointAddress     0x01  EP 1 OUT
    bmAttributes            3
        Transfer Type            Interrupt
        Synch Type               None
        Usage Type               Data
    wMaxPacketSize     0x0040  1x 6

383-390: Set Motion Sync On.
Out 1:
0000   04 03 92 01 01 00 00 00 00 00 00 00 00 00 00 00
Out 2:
0000   05 03 12 01 00 00 00 00 00 00 00 00 00 00 00 00
Out 3:
0000   05 03 12 01 01 00 00 00 00 00 00 00 00 00 00 00

435-446: Set Motion Sync Off.
Out 1:
0000   04 03 92 01 00 00 00 00 00 00 00 00 00 00 00 00
Out 2:
0000   05 03 12 01 01 00 00 00 00 00 00 00 00 00 00 00
Out 3:
0040   05 03 12 01 00 00 00 00 00 00 00 00 00 00 00 00

Set DPI
400:    04 04 90 02 90 01 00 00 00 00 00 00 00 00 00 00
800:    04 04 90 02 20 03 00 00 00 00 00 00 00 00 00 00
1600:   04 04 90 02 40 06 00 00 00 00 00 00 00 00 00 00
3200:   04 04 90 02 80 0c 00 00 00 00 00 00 00 00 00 00
6400:   04 04 90 02 00 19 00 00 00 00 00 00 00 00 00 00

Set Polling Rate
500:    04 04 91 02 f4 01 00 00 00 00 00 00 00 00 00 00
1000:   04 04 91 02 e8 03 00 00 00 00 00 00 00 00 00 00
2000:   04 04 91 02 d0 07 00 00 00 00 00 00 00 00 00 00
4000:   04 04 91 02 a0 0f 00 00 00 00 00 00 00 00 00 00
8000:   ?

Set LOD
1mm:    04 03 95 01 01 00 00 00 00 00 00 00 00 00 00 00
2mm:    04 03 95 01 02 00 00 00 00 00 00 00 00 00 00 00

Set Dongle LED
OFF:    04 03 94 01 00 00 00 00 00 00 00 00 00 00 00 00
Batt:   04 03 94 01 01 00 00 00 00 00 00 00 00 00 00 00
White:  04 03 94 01 02 00 00 00 00 00 00 00 00 00 00 00

https://youtu.be/is9wVOKeIjQ?t=5615

Idea for saving settings:

fn main() {
    // Example 1: Binary to Hex
    let binary_number: u32 = 0b1101_1001; // Binary literal: 217 in decimal
    let hex_result = binary_to_hex(binary_number);
    println!("Binary {:032b} is hex {}", binary_number, hex_result);

    // Example 2: Hex to Binary
    let hex_string = "D9"; // 217 in hexadecimal
    match hex_to_binary(hex_string) {
        Ok(binary) => println!("Hex {} is binary {:032b}", hex_string, binary),
        Err(e) => println!("Error converting hex to binary: {}", e),
    }

    // Example 3: Invalid hex string
    let invalid_hex = "G9"; // Invalid hexadecimal
    match hex_to_binary(invalid_hex) {
        Ok(binary) => println!("Hex {} is binary {:032b}", invalid_hex, binary),
        Err(e) => println!("Error converting hex to binary: {}", e),
    }
}

fn main() {
    let input = 0b10000000000110000; // Example input
    let settings = parse_settings(input);
}

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    let context = Context::new()?;

    // Initialize DeviceInfo
    let mut device_info = device::initialize_device_info(&context)?;

    device_info.set_dpi(DpiOptions::Dpi1600)?;
    device_info.set_polling_rate(PollingOptions::Poll4000)?;
    device_info.set_motion_sync(false)?;
    device_info.set_lod(LodOptions::Lod1)?;
    device_info.set_dongle_led(DongleLedOptions::LedBattery)?;

    Ok(())
}
